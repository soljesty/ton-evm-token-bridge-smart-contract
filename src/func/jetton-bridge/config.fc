;; bridge_address: MsgAdrr, oracles_address: MsgAddr, oracles: Dict, state_flags: uint8, burn_bridge_fee: Coins
(int, int, cell, int, int) get_jetton_bridge_config() impure inline_ref {
    cell bridge_config = config_param(79);
    if (bridge_config.cell_null?()) {
        bridge_config = config_param(-79);
    }
    throw_if(666, bridge_config.cell_null?());

    slice slice_config = bridge_config.begin_parse();

    int bridge_address_hash = slice_config~load_uint(256);

    int oracles_address_hash = slice_config~load_uint(256);

    ;; key: uint256 (public key) value: uint256 (eth address)
    cell oracles = slice_config~load_dict();

    int state_flags = slice_config~load_uint(8);
    
    int burn_bridge_fee = slice_config~load_coins();

    return (bridge_address_hash, oracles_address_hash, oracles, state_flags, burn_bridge_fee);
}